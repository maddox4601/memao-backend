version: '3.8'

services:
  # Flask 后端服务 (Gunicorn)
  backend:
    build: .
    image: ccr.ccs.tencentyun.com/your-namespace/memao-backend:1.0.0
    env_file: .env
    environment:
      - DB_URI=mysql+pymysql://${DB_USER}:${DB_PASSWORD/@/%40}@mysql:3306/${DB_NAME}?charset=utf8mb4
      - GUNICORN_CMD_ARGS=--workers=3 --bind=:5000 --timeout=120 --worker-class=gevent
    deploy:
      resources:
        limits:
          cpus: "0.8"  # 最大占用 0.8 核
          memory: "700M" # 最大内存 700MB
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 5s
      retries: 3
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - backend
    restart: unless-stopped

  # MySQL 数据库 (生产精简配置)
  mysql:
    image: mysql:8.0
    env_file: .env
    environment:
      - MYSQL_ROOT_PASSWORD=${DB_ROOT_PASSWORD}
      - MYSQL_USER=${DB_USER}
      - MYSQL_PASSWORD=${DB_PASSWORD}
      - MYSQL_DATABASE=${DB_NAME}
    command:
      --innodb_buffer_pool_size=256M
      --innodb_log_file_size=64M
      --max_connections=100
    volumes:
      - mysql_data:/var/lib/mysql
      - ./mysql/conf:/etc/mysql/conf.d
      - ./mysql/init:/docker-entrypoint-initdb.d
    deploy:
      resources:
        limits:
          cpus: "0.6"  # 最大占用 0.6 核
          memory: "500M" # 最大内存 500MB
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 15s
      timeout: 5s
      retries: 5
    networks:
      - backend
    restart: unless-stopped

  # Redis 缓存 (生产配置)
  redis:
    image: redis:6-alpine
    command: redis-server --maxmemory 200mb --maxmemory-policy allkeys-lru
    volumes:
      - redis_data:/data
    deploy:
      resources:
        limits:
          cpus: "0.2"  # 最大占用 0.2 核
          memory: "250M" # 最大内存 250MB
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3
    networks:
      - backend
    restart: unless-stopped

  # Nginx 反向代理 (可选)
  nginx:
    image: nginx:1.21-alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/certs:/etc/nginx/certs
    deploy:
      resources:
        limits:
          cpus: "0.1"  # 最大占用 0.1 核
          memory: "100M" # 最大内存 100MB
    depends_on:
      - backend
    networks:
      - backend
      - frontend
    restart: unless-stopped

networks:
  backend:
    internal: true  # 禁止外部直接访问后端服务
  frontend:

volumes:
  mysql_data:
  redis_data: